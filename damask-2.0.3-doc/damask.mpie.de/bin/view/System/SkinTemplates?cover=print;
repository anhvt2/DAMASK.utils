<!DOCTYPE html><html lang="en">
<head>
<title> SkinTemplates &lt; System &lt; DAMASK</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.5, user-scalable=yes" />
<meta name="mobile-web-app-capable" content="yes" />
<meta name="mobile-web-app-status-bar-style" content="black-translucent" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
<link rel="icon" href="/pub/System/ProjectLogos/favicon-damask.ico" type="image/x-icon" />
<link rel="shortcut icon" href="/pub/System/ProjectLogos/favicon-damask.ico" type="image/x-icon" />
<link rel="alternate" href="https://damask.mpie.de/bin/edit/System/SkinTemplates?t=1627668458" type="application/x-wiki" title="edit SkinTemplates" />
<meta name="TEXT_NUM_TOPICS" content="Number of topics:" />
<meta name="TEXT_MODIFY_SEARCH" content="Modify search" />
<meta name="robots" content="noindex" />
<link rel="alternate" type="application/rss+xml" title="RSS Feed" href="/bin/view/System/WebRss" />
<base href="https://damask.mpie.de/bin/view/System/SkinTemplates" /><!--[if IE]></base><![endif]-->
<link rel='stylesheet' href='/pub/System/PageOptimizerPlugin/cache/34fe9cce0bb56ea953b9b19b85d1e87d.css' class='CLASSIFICATIONPLUGIN::CSS JQUERYPLUGIN::COMMENT JQUERYPLUGIN::TABLESORTER SMILIESPLUGIN head' media='all' />

<style class='head EXTERNALLINKPLUGIN_CSS' type="text/css" media="all">
.externalLink a:link,
.externalLink a:visited,
.externalLink a:hover {
	background-image:url(/pub/System/ExternalLinkPlugin/diagonal.gif);
	background-repeat:no-repeat;
	background-position:right;
	padding-right:18px;
}
</style>

<style type="text/css" media="all">
		  /* Styles that are set using variables */
		  .patternWebIndicator,
		  .patternWebIndicator a {
					 background-color:none;
		  }
		  #patternTopBarContents { background-image:url(https://damask.mpie.de/pub/System/ProjectLogos/DAMASK.png); background-repeat:repeat-x;}

.patternBookView {
	border-color:#B9DAFF;
}
.patternPreviewPage #patternMain {
	/* uncomment to set the preview image */
	/*background-image:url("/pub/System/PreviewBackground/preview2bg.gif");*/
}
</style>

<script class='script JQUERYPLUGIN' src='/pub/System/JQueryPlugin/jquery-2.2.4.js'></script>
<script class='script JQUERYPLUGIN::BROWSER' src='/pub/System/JQueryPlugin/plugins/browser/jquery.browser.js?version=0.1.0'></script>
<script class='script JQUERYPLUGIN::MIGRATE' src='/pub/System/JQueryPlugin/plugins/migrate/jquery.migrate.js?version=3.2.1'></script>
<script class='script JQUERYPLUGIN::LIVEQUERY' src='/pub/System/JQueryPlugin/plugins/livequery/jquery.livequery.js?version=1.3.6'></script>
<script class='script JQUERYPLUGIN::FOSWIKI' src='/pub/System/JQueryPlugin/plugins/foswiki/jquery.foswiki.js?version=2.14'></script>
<script class='script JavascriptFiles/foswikiString' type="text/javascript" src="/pub/System/JavascriptFiles/foswikiString.js"></script>
<script class='script JavascriptFiles/foswikiPref' type="text/javascript" src="/pub/System/JavascriptFiles/foswikiPref.js"></script>
<script class='script JavascriptFiles/strikeone' type="text/javascript" src="/pub/System/JavascriptFiles/strikeone.js"></script>
<script class='script JavascriptFiles/foswikiForm' type="text/javascript" src="/pub/System/JavascriptFiles/foswikiForm.js"></script>
<script class='script JQUERYPLUGIN::FOSWIKI::PREFERENCES foswikiPreferences' type='text/json'>{
   "COOKIEREALM" : "",
   "SCRIPTURL" : "https://damask.mpie.de/bin",
   "TOPIC" : "SkinTemplates",
   "WIKIUSERNAME" : "Main.WikiGuest",
   "SCRIPTURLPATH" : "/bin",
   "SERVERTIME" : "30 Jul 2021 - 20:07",
   "SYSTEMWEB" : "System",
   "NAMEFILTER" : "[\\\\\\s*?~^$@%`\"'&|<:;>\\[\\]#\\x00-\\x1f]",
   "SCRIPTURLPATHS" : {
      "view" : "/bin/view"
   },
   "WIKINAME" : "WikiGuest",
   "WEB" : "System",
   "URLHOST" : "https://damask.mpie.de",
   "SCRIPTSUFFIX" : "",
   "USERSWEB" : "Main",
   "SKIN" : "damask,famfamfam,pattern",
   "PUBURL" : "https://damask.mpie.de/pub",
   "PUBURLPATH" : "/pub",
   "USERNAME" : "guest"
}
</script>
<script class='script JQUERYPLUGIN::UPLOADER::META foswikiPreferences' type='text/json'>{"TopicInteractionPlugin":{"officeSuite":"","attachFileSizeLimit":"262144"}}</script>
<script class='script JQTABLEPLUGIN::SORT' type='text/javascript'>
jQuery.extend(foswiki.preferences, {
  'JQTablePlugin.sort' : 'all'
});
</script>
<script class='script JQUERYPLUGIN::JEDITABLE' src='/pub/System/JEditableContrib/jquery.jeditable.js?version=06 Feb 2017'></script>
<script class='script JQUERYPLUGIN::METADATA' src='/pub/System/JQueryPlugin/plugins/metadata/jquery.metadata.js?version=2.1ef2bb44c86f5d0e98d55'></script>
<script class='script JQUERYPLUGIN::CHILI' src='/pub/System/JQueryPlugin/plugins/chili/jquery.chili.js?version=2.2_1'></script>
<script class='script JQUERYPLUGIN::CHILI' src='/pub/System/JQueryPlugin/plugins/chili/jquery.chili.init.js?version=2.2_1'></script>
<script class='script PatternSkin/pattern' type="text/javascript" src="/pub/System/PatternSkin/pattern.js"></script>
<script class='script JQUERYPLUGIN::COMMENT' src='/pub/System/CommentPlugin/comment.js?version=3.0'></script>
<script class='script JQUERYPLUGIN::TABLESORTER' src='/pub/System/JQTablePlugin/jquery.tablesorter.js?version=2.0.3'></script>
<script class='script JQUERYPLUGIN::TABLESORTER' src='/pub/System/JQTablePlugin/tables.js?version=2.0.3'></script>

<link rel="stylesheet" href="https://damask.mpie.de/pub/x3dom-1.7.1/x3dom.css">
<script src="https://damask.mpie.de/pub/x3dom-1.7.1/x3dom.js"></script>
</head> 
<body class="foswikiNoJs patternViewPage patternPrintPage">
<span id="PageTop"></span><div class="foswikiPage"><div id="patternScreen">
<div id="patternPageShadow">
<div id="patternPage">
<div id="patternOuter" class="clear">
<div id="patternFloatWrap">
<div id="patternMain">
<div id="patternMainContents">
<div class="patternContent"><div class="foswikiTopic"> 
<h1 id="Skin_Templates">  Skin Templates </h1>
<p class='p'>The framework used to render output.</p>

<div class="foswikiToc" id="foswikiTOC"><span class="foswikiTocTitle">On this page:</span> <ul>
<li> <a href="?cover=print#Overview"> Overview </a>
</li> <li> <a href="?cover=print#How_Template_Directives_Work"> How Template Directives Work </a> <ul>
<li> <a href="?cover=print#Parameters_to_blocks"> Parameters to blocks </a> <ul>
<li> <a href="?cover=print#Block_parameters"> Block parameters </a>
</li> <li> <a href="?cover=print#Block_definition_parameters"> Block definition parameters </a>
</li> <li> <a href="?cover=print#Naming"> Naming </a>
</li></ul> 
</li> <li> <a href="?cover=print#Conditional_expansion"> Conditional expansion </a> <ul>
<li> <a href="?cover=print#Using_context_identifiers"> Using context identifiers </a>
</li> <li> <a href="?cover=print#Using_parameters"> Using parameters </a>
</li></ul> 
</li> <li> <a href="?cover=print#A_61TMPL:INCLUDE_61_recursion"> TMPL:INCLUDE recursion </a>
</li> <li> <a href="?cover=print#Comments"> Comments </a>
</li></ul> 
</li> <li> <a href="?cover=print#Finding_Skin_Templates"> Finding Skin Templates </a> <ul>
<li> <a href="?cover=print#Security_and_usability"> Security and usability </a>
</li></ul> 
</li> <li> <a href="?cover=print#Developing_new_templates"> Developing new templates </a> <ul>
<li> <a href="?cover=print#Debugging"> Debugging </a>
</li> <li> <a href="?cover=print#Overview_of_the_default_templates"> Overview of the default templates </a>
</li></ul> 
</li></ul> 
</div>
<p class='p'></p>

<h2 id="Overview">  Overview </h2>
<p></p>

<em>Skin Templates</em> are plain text with embedded <em>template directives</em>,
<a href="/bin/view/System/Macros">macros</a> and <a href="/bin/view/System/SkinTemplateTokens">tokens</a> that are expanded by
Foswiki to build an output page, usually HTML.
<p></p>

(If you are looking for the template used as 'starter text' for new topics.  see <a href="/bin/view/System/TemplateTopics">TemplateTopics</a>.)
<p></p>

<span id="HtmlTemplates"></span>
Skin templates are used when composing the output from all actions, such as
view, edit, and preview. By sharing common template definitions between all
these actions, it makes it easy to change the look and feel of all
pages by editing just a few templates.
<p></p>

Skin templates are either stored as text files with the extension <code>.tmpl</code>
in the <code>templates/</code> directory, or in Foswiki topics.
<p></p>

<em>Template directives</em> are expanded when the template is loaded, and are
used to define the general structure of the output. <em>Macros</em> and Template
<em>Tokens</em> are expanded when the page is rendered, and fill in page-specific 
information.
<p></p>

Note that <em>Macros</em> and <em>Tokens</em> are written using the same syntax.  
See <a href="/bin/view/System/Macros">Macros</a> for more information on macros.
<p></p>

<em>Tokens</em> look exactly like Macros, but they are specific for the script
expanding the template, and cannot be used elsewhere in Foswiki.  See
<a href="/bin/view/System/SkinTemplateTokens">SkinTemplateTokens</a> for more information on tokens.
<p></p>

<span id="TemplateMacros"></span>
<h2 id="How_Template_Directives_Work">  How Template Directives Work </h2>
Template directives look a lot like standard <a href="/bin/view/System/Macros">Macros</a>. <ul>
<li> <code>%TMPL:INCLUDE{"file"}%</code> includes a template file. The file is found as described <a class="foswikiCurrentTopicLink" href="#FindingTemplates">below</a>.
</li> <li> <code>%TMPL:DEF{"name"}%</code> defines a block. <strong>All</strong> text between this and the next <code>%TMPL:END%</code> directive is removed and saved for later use with <code>%TMPL:P%</code>.
</li> <li> <code>%TMPL:END%</code> ends a block definition.
</li> <li> <code>%TMPL:PREV%</code>: returns the previous definition of the block being defined.
</li> <li> <code>%TMPL:P{"name"}%</code> includes a previously defined block.
</li> <li> <code>%{...}%</code> is a comment. Whitespace either side of the comment     (newlines, spaces, tabs etc) is treated as part of the comment, and     removed when the comment is removed.
</li></ul> 
You can use a block before <em>or</em> after declaring it. If you define the same
block twice, only the second definition is used.
<p></p>

<div class="foswikiHelp">
<img src="/pub/System/DocumentGraphics/warning.png" alt="ALERT!" title="ALERT!" width="16" height="16" /> Most template directives work only for templates: they do not get processed in normal topic text. The one exception is <code>%TMPL:P</code>.
</div>
<p></p>

<h3 id="Parameters_to_blocks">  Parameters to blocks </h3>
<code>%TMPL:DEF%</code> and <code>%TMPL:P%</code> support simple parameters.
<p></p>

Parameters are only available in the immediate definition being included; they
are not passed on to any other <code>TMPL:P</code> inside the <code>TMPL:DEF</code> being expanded
unless they are passed on explicitly in a new parameter.
<p class='p'></p>

<h4 id="Block_parameters">  Block parameters </h4>
For example, we can define a parameter <code>P</code> inside a block:
<pre class="tml">
&#37;TMPL:DEF{&#34;x&#34;}&#37; x&#37;P&#37;z &#37;TMPL:END&#37;
</pre>
then pass a value to that parameter:
<pre class="tml">
&#37;TMPL:P{&#34;x&#34; P&#61;&#34;y&#34;}&#37;
</pre>
This will expand to <code>xyz</code>.
<p></p>

<h4 id="Block_definition_parameters">  Block definition parameters </h4>
Default parameter values can be set in the definition:
<pre class="tml">
&#37;TMPL:DEF{&#34;x&#34; y&#61;&#34;1&#34;}&#37; x&#37;y&#37;z &#37;TMPL:END&#37;
</pre>
then
<pre class="tml">
&#37;TMPL:P{&#34;x&#34;}&#37;
</pre>
will expand to <code>x1z</code>.
<p></p>

You can also use a parameter inside a default parameter:
<pre class="tml">
&#37;TMPL:DEF{&#34;x&#34; y&#61;&#34;&#37;value&#37;&#34;}&#37; x&#37;y&#37;z &#37;TMPL:END&#37;
</pre>
then
<pre class="tml">
&#37;TMPL:P{&#34;x&#34; value&#61;&#34;1000&#34;}&#37;
</pre>
will expand to <code>x1000z</code>.
<p class='p'></p>

<h4 id="Naming">  Naming </h4>
Any alphanumeric characters can be used in parameter names. <code>TMPL:P</code> parameters
override any other possible definition of the name, so you should not use
parameter names that might clash with <a href="/bin/view/System/Macros">Macros</a>.
<p class='p'></p>

<p class='p'></p>

<p class='p'></p>

<h3 id="Conditional_expansion">  Conditional expansion </h3>
<h4 id="Using_context_identifiers">  Using context identifiers </h4>
Three parameter names, <code>context</code>, <code>then</code> and <code>else</code> are <strong>reserved</strong>.
They are used to support a limited form of "if" condition that you can use to select which of two <code>TMPL:DEF</code> to expand, based on a <em>context identifier</em>:
<pre class="tml">
&#37;TMPL:DEF{&#34;link&#95;inactive&#34;}&#37;&#60;input type&#61;&#34;button&#34; disabled value&#61;&#34;Link&#62;&#37;TMPL:END&#37;
&#37;TMPL:DEF{&#34;link&#95;active&#34;}&#37;&#60;input type&#61;&#34;button&#34; onclick&#61;&#34;link()&#34; value&#61;&#34;Link&#34; /&#62;&#37;TMPL:END&#37;
&#37;TMPL:P{context&#61;&#34;inactive&#34; then&#61;&#34;link&#95;inactive&#34; else&#61;&#34;link&#95;active&#34;}&#37; for &#37;CONTEXT&#37;
</pre>
When the <code>inactive</code> context is set, then this will expand the <code>link_inactive</code>
<code>TMPL:DEF</code>; otherwise it will expand <code>link_active</code>.
<p></p>

This style of conditional expansion is used in preference to the
<code><a href="/bin/view/System/VarIF">%IF{}</a></code> macro where possible because it is much more efficient.
<p></p>

See <a href="/bin/view/System/IfStatements#Context_identifiers">If Statements: Context identifiers</a> for details of supported context identifiers.
<p></p>

<h4 id="Using_parameters">  Using parameters </h4>
The mechanism to pass parameters to blocks can be used to conditionally call different template blocks. For example:
<pre class="tml">
&#37;TMPL:DEF{&#34;conditional&#34; tmpl&#61;&#34;default&#34;}&#37;
&#37;TMPL:P{&#34;&#37;tmpl&#37;&#34;}&#37;
&#37;TMPL:END&#37;

&#37;TMPL:DEF{&#34;default&#34;}&#37;
This is a default template.
&#37;TMPL:END&#37;

&#37;TMPL:DEF{&#34;special&#34;}&#37;
This is a special template.
&#37;TMPL:END&#37;

...
&#37;TMPL:P{&#34;conditional&#34; tmpl&#61;&#34;special&#34;}&#37;
</pre>
<p class='p'></p>

<h3 id="A_61TMPL:INCLUDE_61_recursion">  <code>TMPL:INCLUDE</code> recursion </h3>
You can use recursion with <code>%TMPL:INCLUDE%</code> for piecewise customisation, or
mixing in new features.
<p></p>

If there is a recursion in the <code>%TMPL:INCLUDE%</code> chain (eg. <code>view.tmpl</code> contains
<code>%TMPL:INCLUDE{"view"}%</code>), the templating system will detect that you
are trying to include the same template again, and will instead include the
<em>next</em> version of the template of that name that it finds in the
<a class="foswikiCurrentTopicLink" href="#TemplatePath">template path</a>. 
<p></p>

For example, say you <em>only</em> want to override the breadcrumbs for the view
script. You could create a tempate called <code>view.crumbless.tmpl</code>:
<pre class="tml">
&#37;TMPL:INCLUDE{&#34;view&#34;}&#37;
&#37;TMPL:DEF{&#34;breadcrumb&#34;}&#37; We don&#39;t want any crumbs &#37;TMPL:END&#37;
</pre>
and then <code>* Set SKIN=crumbless,pattern</code>
<p class='p'>Remember: the template path contains the most specific template first.</p>

<h3 id="Comments">  Comments </h3>
Comments <code>%{...}%</code> are removed from the templates as soon as the file is
read, before any other template macros are evaluated. Whitespace either side
of the comment (newlines, spaces, tabs etc) is also removed.
<p></p>

<span id="FindingTemplates"></span>
<h2 id="Finding_Skin_Templates">  Finding Skin Templates </h2>
<p></p>

Most skin templates are stored in <code>.tmpl</code> files in the <code>templates</code> directory.
For example, <code>templates/view.tmpl</code> is the default skin template file for
the <code>bin/view</code> script. You can also save skin templates in user topics.
<p></p>

The <code>{TemplatePath}</code> configuration setting (in the Miscellaneous section of
the <a href="/bin/configure">configure</a> page) defines which directories,
files and Foswiki topics will be recognised as containing templates.
<p></p>

Skin templates that are loaded using <code>%TMPL:INCLUDE</code> with an explicit <code>.tmpl</code>
extension are looked for <em>only</em> in the <code>templates/</code> directory. For instance
<code>%TMPL:INCLUDE{"example.tmpl"}%</code> will only return <code>templates/example.tmpl</code>,
regardless of <code>{TemplatePath}</code> and <code>SKIN</code> settings.
<p></p>

<span id="TemplatePath"></span>
All other templates are searched for using the <code>{TemplatePath}</code>. This is a
list of generic name patterns, each of which contains the placeholders
<code>$name</code> (the template name), <code>$web</code> (the web), and <code>$skin</code> (the skin),
each standing in for part of the name. Each entry in this list is expanded
in turn until the template is found.
<p></p>

The rules defined by the out-of-the-box setting of <code>{TemplatePath}</code> are: <ol>
<li> <code>templates/$web/$name.$skin.tmpl</code>
</li> <li> <code>templates/$name.$skin.tmpl</code>
</li> <li> <code>$web.$skinSkin$nameTemplate</code>
</li> <li> <code>System.$skinSkin$nameTemplate</code>
</li> <li> <code>templates/$web/$name.tmpl</code>
</li> <li> <code>templates/$name.tmpl</code>
</li> <li> <code>$web.$nameTemplate</code>
</li> <li> <code>System.$nameTemplate</code>
</li></ol> 
For example, let's say we are viewing a topic in web <code>Sandbox</code> and are searching for the template called <code>function</code>. The skin path is set to <code>custom,pattern</code>. The following locations will be considered in turn, until a template is found: <ol>
<li> <code>templates/Sandbox/function.custom.tmpl</code> <em>(rule 1)</em> <img class='smily' src='/pub/System/SmiliesPlugin/skull.gif' alt='dead, deadly, doom' title='dead, deadly, doom' />
</li> <li> <code>templates/Sandbox/function.pattern.tmpl</code> <em>(rule 1)</em> <img class='smily' src='/pub/System/SmiliesPlugin/skull.gif' alt='dead, deadly, doom' title='dead, deadly, doom' />
</li> <li> <code>templates/function.custom.tmpl</code> <em>(rule 2)</em>
</li> <li> <code>templates/function.pattern.tmpl</code> <em>(rule 2)</em>
</li> <li> <code>Sandbox.CustomSkinFunctionTemplate</code> <em>(rule 3)</em>
</li> <li> <code>Sandbox.PatternSkinFunctionTemplate</code> <em>(rule 3)</em>
</li> <li> <code>System.CustomSkinFunctionTemplate</code> <em>(rule 4)</em>
</li> <li> <code>System.PatternSkinFunctionTemplate</code> <em>(rule 4)</em>
</li> <li> <code>templates/Sandbox/function.tmpl</code> <em>(rule 5)</em> <img class='smily' src='/pub/System/SmiliesPlugin/skull.gif' alt='dead, deadly, doom' title='dead, deadly, doom' />
</li> <li> <code>templates/function.tmpl</code> <em>(rule 6)</em>
</li> <li> <code>Sandbox.FunctionTemplate</code> <em>(rule 7)</em>
</li> <li> <code>System.FunctionTemplate</code> <em>(rule 8)</em>
</li></ol> 
<div class="foswikiHelp"><img src="/pub/System/DocumentGraphics/warning.png" alt="ALERT!" title="ALERT!" width="16" height="16" /> <img class='smily' src='/pub/System/SmiliesPlugin/skull.gif' alt='dead, deadly, doom' title='dead, deadly, doom' /> This usage is supported <strong>for compatibility only</strong> and is <strong>deprecated</strong>. Store web-specific templates in topics instead. </div>
<p class='p'>When a skin name or template name is used to build a topic name, the first character is automatically capitalised.</p>

The <em>skin path</em> is set as described in <a href="/bin/view/System/Skins">Skins</a>.
<p></p>

<span id="TemplatePreferences"></span>
Template file names are usually derived from the name of the currently executing script; however it is also possible to override these settings in the <code>view</code> and <code>edit</code> scripts, for example when a topic-specific template is required. Two <a href="/bin/view/System/PreferenceSettings">preference settings</a> can be used to override the skin templates used: <ul>
<li> <code>VIEW_TEMPLATE</code> sets the template to be used for viewing a topic.
</li> <li> <code>EDIT_TEMPLATE</code> sets the template for editing a topic.
</li></ul> 
If these preferences are set <ul>
<li> locally (using <em>Local</em> instead of <em>Set</em>) in a topic, or
</li> <li> in <a href="/bin/view/System/WebPreferences">WebPreferences</a>, or
</li> <li> in <a href="/bin/view/Main/SitePreferences">SitePreferences</a>, or
</li> <li> in <a href="/bin/view/System/DefaultPreferences">DefaultPreferences</a> (using <em>Set</em>),
</li></ul> 
then the indicated templates will be chosen for <code>view</code> and <code>edit</code> respectively. The template search order remains as specified above.
<p></p>

Note that the topic name specified as a template may need to be fully qualified with Web and SubWeb. E.g.
<pre>
   &#42; Set VIEW&#95;TEMPLATE &#61; Web/SubWeb.SpecificViewTemplate
</pre>
Also the qualification needs to be given in the form Web/SubWeb.TopicTemplate as in the example; Web/SubWeb/TopicTemplate does not work.
<p></p>

<span id="TemplateSecurity"></span>
<h3 id="Security_and_usability">  Security and usability </h3>
Setting the <code>{TemplatePath}</code> is a compromise between the often
opposing goals of security and usability. From a security perspective,
allowing templates to be loaded from topics might open a door to people
who want to inject their own evil HTML in those topics. From a usability
perspective, it's very desireable to be able to override templates from topics,
as it vastly increases the range of wiki applications.
<p></p>

The default <code>{TemplatePath}</code> comes down on the side of usability, by allowing
templates from topics to be found before templates from the (more secure)
<code>templates</code> directory. If you are particularly security concious, you may
want to <strong>reverse</strong> this order, so that templates in <code>templates/</code> are always
found before those in topics. You can do this by simply moving rules
3 and 7 to the end of the list.
<p></p>

Note that topics containing templates are checked for VIEW access using the
normal <a href="/bin/view/System/AccessControl">Foswiki access controls</a>. Any access control failure
is silently ignored, and the template path expansion continues.
<p></p>

<h2 id="Developing_new_templates">  Developing new templates </h2>
<h3 id="Debugging">  Debugging </h3>
When writing new templates, it can sometimes it can be hard to work out
where different parts of the generated output come from. To help you debug
your new templates, the <code>Foswiki::Templates</code> module has a "trace" mode. In
this mode, the HTML source created is annotated with HTML comments that are wrapped around the output generated by each template, as it is expanded. For example, when trace mode is off,
<pre class="tml">
&#37;TMPL:DEF{&#34;x:y&#34;}&#37; de &#37;TMPL:END&#37;
blah &#37;TMPL:P{&#34;x:y&#34;}&#37; blah
</pre>
will expand to:
<pre class="tml">
blah  de  blah
</pre>
With tracing enabled, the HTML source will look like:
<pre class="tml">
blah &#60;!--x:y--&#62; de &#60;!--/x:y--&#62; blah
</pre>
To enable the trace mode, edit <code>lib/Foswiki/Templates.pm</code> in your
installation and change <code>use constant TRACE =&gt; 0</code> to
<code>use constant TRACE =&gt; 1</code>.
<p></p>

Note that the trace annotations may make your output look strange. However
you can usually "view source" in the browser to see what was generated (or
you may be able to run the script from the command-line e.g. <code>cd bin; perl -T -I . view topic=MyWeb.MyTopic skin=mynewskin</code>).
<p></p>

<div class="foswikiHelp"><img src="/pub/System/DocumentGraphics/tip.png" alt="IDEA!" title="IDEA!" width="16" height="16" /> Don't forget to switch the trace mode off again when you are finished!</div>
<p></p>

<h3 id="Overview_of_the_default_templates">  Overview of the default templates </h3>
<p></p>

Finally, here's a very high-level overview of the default
templates. These templates are rarely used on their own, but are used as
the base on which skins, such as <a href="/bin/view/System/PatternSkin">PatternSkin</a>, are built.
<p></p>

<code>foswiki.tmpl</code> is the default master template. The main purpose of this
template is to instantiate the following blocks: <ul>
<li> <code>htmldoctype</code> - start of all HTML pages
</li> <li> <code>bodystart</code> - start of the body tag
</li> <li> <code>main</code> - page content
</li> <li> <code>bodyend</code> - end of the page
</li></ul> 
Default definitions are provided for each of these blocks. <code>foswiki.tmpl</code>
is never used on its own, but is frequently included by other templates.
<p></p>

Next, there are a number of action-specific templates, such as <code>view.tmpl</code>,
<code>edit.tmpl</code>, <code>login.tmpl</code>. These are the templates loaded by the actions of
the same name. Their purpose is to include <code>foswiki.tmpl</code>, and provide new,
page-specific, definitions of the blocks described above.
<p></p>

Several of the action-specific templates have <em>skinned</em> versions, such as <code>view.print.tmpl</code> and <code>view.text.tmpl</code>. These skinned versions are used to view the page in a specific way - for printing, or as plain text, for example.
<p></p>

<code>messages.tmpl</code> is an important template; it provides the basic definitions of
all error and warning messages that Foswiki issues. These are defined using
the <code>%MAKETEXT</code> macro to simplify translation into different languages.
<p></p>

<code>attachtables.tmpl</code> is another template worthy of separate mention. This
template defines the different parts of the page that are involved in
displaying tables of attachments. The blocks defined in this template are
instantiated directly from code, rather than via <code>%TMPL:P</code>.
<p class='p'>The remainder of the templates are used for varying purposes; their names,
or introductory comments, should clarify.</p>

A skin can provide a new version of any or all of these templates, depending
on the depth of customisation. See the template files named <code>*.pattern.*</code> to
see what <a href="/bin/view/System/PatternSkin">PatternSkin</a> defines.
<p class='p'></p>

<p class='p'></p>

<hr />
<strong>Related Topics:</strong> <a href="/bin/view/System/Skins">Skins</a> <a href="/bin/view/System/Macros">Macros</a> <a href="/bin/view/System/JavascriptFiles">JavascriptFiles</a>

<p></p>
</div>
<p class='p'></p>

</div>
<div class="patternInfo">This topic: System<span class='foswikiSeparator'>&nbsp;&gt;&nbsp;</span><a href="/bin/view/System/Category">Category</a> &gt; <a href="/bin/view/System/AdminDocumentationCategory">AdminDocumentationCategory</a> &gt; <a href="/bin/view/System/Skins">Skins</a><span class='foswikiSeparator'>&nbsp;&gt;&nbsp;</span>SkinTemplates <br />
Topic revision:  <span class='patternRevInfo'>03 Feb 2016, <a href="/bin/view/Main/UnknownUser">UnknownUser</a></span></div>
</div>
</div>
</div>
</div><div id="patternBottomBar"><div id="patternBottomBarContents"><div id="patternWebBottomBar"><span class="foswikiRight"> <a href="http://foswiki.org/"><img src="/pub/System/ProjectLogos/foswiki-badge.png" height="42" alt="This site is powered by Foswiki" title="This site is powered by Foswiki" /></a></span>Copyright &copy; by the contributing authors. All material on this site is the property of the contributing authors. <br /> Ideas, requests, problems regarding DAMASK? <a href='mailto:damask@mpie.de?subject=DAMASK%20Feedback%20on%20System.SkinTemplates'>Send feedback</a> </div></div></div>
</div>
</div>
</div>
</div></body></html>