
"""
    This script is to create a table in LaTeX format for manuscript with 2 columns - a inferred porosity column and another column with error (L1).
"""
import numpy as np

expPoro = np.array([0.001799, 0.010502, 0.018169, 0.043291])

x = np.array([
[0.01  , 0.009049 , 0.001746 , 0.01293 , 0.01050 , 0.02121 , 0.01698 , 0.05121 , 0.04274 ],  
[0.02  , 0.004633 , 0.001746 , 0.009025 , 0.01050 , 0.01797 , 0.01698 , 0.04309 , 0.04274 ],  
[0.03  , 0.001848 , 0.001746 , 0.007611 , 0.01050 , 0.01735 , 0.01698 , 0.04350 , 0.04274 ],  
[0.04  , 0.001256 , 0.001746 , 0.007388 , 0.01050 , 0.01638 , 0.01698 , 0.04224 , 0.04274 ],  
[0.05  , 0.001136 , 0.001746 , 0.007303 , 0.01050 , 0.01619 , 0.01698 , 0.04254 , 0.04274 ],  
[0.06  , 0.001432 , 0.001746 , 0.007382 , 0.01050 , 0.01668 , 0.01698 , 0.03999 , 0.04274 ],  
[0.07  , 0.001716 , 0.001746 , 0.007031 , 0.01050 , 0.01665 , 0.01698 , 0.03985 , 0.04274 ],  
[0.08  , 0.002114 , 0.001746 , 0.007019 , 0.01050 , 0.01648 , 0.01698 , 0.04047 , 0.04274 ],  
[0.09  , 0.001854 , 0.001746 , 0.006747 , 0.01050 , 0.01633 , 0.01698 , 0.04028 , 0.04274 ],  
[0.010 , 0.002090 , 0.001746 , 0.007061 , 0.01050 , 0.01633 , 0.01698 , 0.04092 , 0.04274 ],  
[0.011 , 0.002591 , 0.001746 , 0.006620 , 0.01050 , 0.01639 , 0.01698 , 0.04036 , 0.04274 ],  
[0.012 , 0.002996 , 0.001746 , 0.006500 , 0.01050 , 0.01667 , 0.01698 , 0.04101 , 0.04274 ],  
[0.013 , 0.003208 , 0.001746 , 0.006687 , 0.01050 , 0.01583 , 0.01698 , 0.04033 , 0.04274 ],  
[0.014 , 0.003443 , 0.001746 , 0.006494 , 0.01050 , 0.01594 , 0.01698 , 0.04047 , 0.04274 ],  
[0.015 , 0.003806 , 0.001746 , 0.006584 , 0.01050 , 0.01562 , 0.01698 , 0.03973 , 0.04274 ],  
[0.016 , 0.004047 , 0.001746 , 0.005908 , 0.01050 , 0.01565 , 0.01698 , 0.03987 , 0.04274 ],  
[0.017 , 0.004404 , 0.001746 , 0.006137 , 0.01050 , 0.01549 , 0.01698 , 0.03999 , 0.04274 ],  
[0.018 , 0.004603 , 0.001746 , 0.006415 , 0.01050 , 0.01530 , 0.01698 , 0.03994 , 0.04274 ],  
[0.019 , 0.004851 , 0.001746 , 0.006325 , 0.01050 , 0.01505 , 0.01698 , 0.03967 , 0.04274 ],  
[0.020 , 0.005165 , 0.001746 , 0.005684 , 0.01050 , 0.01482 , 0.01698 , 0.03976 , 0.04274 ],  
[0.021 , 0.005358 , 0.001746 , 0.006022 , 0.01050 , 0.01517 , 0.01698 , 0.03970 , 0.04274 ],  
[0.022 , 0.005594 , 0.001746 , 0.005062 , 0.01050 , 0.01491 , 0.01698 , 0.03994 , 0.04274 ],  
[0.023 , 0.005757 , 0.001746 , 0.001287 , 0.01050 , 0.01464 , 0.01698 , 0.03970 , 0.04274 ],  
[0.024 , 0.006113 , 0.001746 , 0.004114 , 0.01050 , 0.01519 , 0.01698 , 0.03945 , 0.04274 ],  
[0.025 , 0.006252 , 0.001746 , 0.001281 , 0.01050 , 0.01490 , 0.01698 , 0.03984 , 0.04274 ]
])

y = x.copy()
y[:,1:] *= 100
y[:,2] = (np.abs(y[:,1] - expPoro[0] * 100))
y[:,4] = (np.abs(y[:,3] - expPoro[1] * 100))
y[:,6] = (np.abs(y[:,5] - expPoro[2] * 100))
y[:,8] = (np.abs(y[:,7] - expPoro[3] * 100))

np.savetxt('y.csv', y, delimiter=' & ', fmt='%.4f')
