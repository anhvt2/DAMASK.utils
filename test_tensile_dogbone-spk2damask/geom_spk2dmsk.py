
import numpy as np
import os, sys
import pandas as pd
import matplotlib as mpl
import matplotlib.pyplot as plt
import argparse
parser = argparse.ArgumentParser()
parser.add_argument("-d", "--dump", type=str, required=True)
args = parser.parse_args()
dumpFileName = args.dump
outFileName = 'spk_' + dumpFileName.replace('.','_') + '.geom'

# dumpFileName = 'dump.12.out'
# headers: ATOMS id type i1 energy x y z
res = 50
Nx = 120
Ny = 20
Nz = 200
d = np.loadtxt(dumpFileName, skiprows=9, dtype=int)
num_grains = len(np.unique(d[:,1]))

m = np.zeros([Nx, Ny, Nz])

for i in range(len(d)):
	x = int(d[i,4])
	y = int(d[i,5])
	z = int(d[i,6])
	grain_id = int(d[i,1]) # or d[i,2] -- both are the same
	m[x,y,z] = grain_id
	print(f"finish ({x},{y}, {z})")


geom = m.T.flatten()
geom = np.array(geom, dtype=int)
num_lines = np.floor(len(geom)) / 10
num_elems_last_line = len(geom) % 10

f = open(outFileName, 'w')
f.write('6       header\n')
f.write('# Generated by geom_spk2dmsk.py\n')
f.write('grid    a %d    b %d    c %d\n' % (Nx, Ny, Nz))
f.write('size    x %.3f    y %.3f    z %.3f\n' % (Nx*res, Ny*res, Nz*res))
f.write('origin    x 0.000    y 0.000    z 0.000\n')
f.write('homogenization  1\n')
f.write('microstructures %d\n' % num_grains)

for j in range(int(num_lines)):
	for k in range(10):
		idx = int(j * 10 + k)
		f.write('%10d' % int(geom[idx]))
		# f.write({':>10d'}.format(geom[idx]))
		# f.write(f"{int(geom[idx]):>10d}")
	f.write('\n')

if num_elems_last_line > 0:
	for idx in range(-num_elems_last_line,0):
		# f.write({': >10d'}.format(geom[idx]))
		f.write('%10d' % int(geom[idx]))

f.close()


