#!/usr/bin/env python3

import argparse

import numpy as np

PARSER = argparse.ArgumentParser()
PARSER.add_argument("-npy", "--npy", type=str, required=True)
ARGS = PARSER.parse_args()

NPY_FILE_NAME = ARGS.npy
GEOM_FILE_NAME = NPY_FILE_NAME[:-4] + '.geom'

GEOM = np.load(NPY_FILE_NAME)
NX, NY, NZ = GEOM.shape

DEFAULT_HEADERS = [
    '6       header\n',
    '# Generated by geom_spk2dmsk.py\n',
    'grid    a %d    b %d    c %d\n' % (NX, NY, NZ),
    'size    x %d    y %d    z %d\n' % (NX, NY, NZ),
    'origin    x 0.000    y 0.000    z 0.000\n',
    'homogenization  1\n',
    'microstructures %d\n' % np.max(GEOM),
]


def _write_geom(geomFileName, geom, headers=DEFAULT_HEADERS):
    """
    Parameters
    ----------
    - geomFileName: output file
    - geom (np.ndarray): 3D numpy array to be saved
    - complete headers for geom (no sanity check)
    Returns
    -------
    .geom file written in geomFileName
    """
    geom = geom.T.flatten()

    with open(geomFileName, 'w') as f:
        for i in range(len(headers)):
            f.write(headers[i])
        num_lines = int(np.floor(len(geom)) / 10)
        num_elems_last_line = int(len(geom) % 10)
        for j in range(int(num_lines)):
            for k in range(10):
                idx = int(j * 10 + k)
                f.write('%10d' % int(geom[idx]))
            f.write('\n')
        if num_elems_last_line > 0:
            for idx in range(-num_elems_last_line, 0):
                f.write('%10d' % int(geom[idx]))

    # write headers

    # write geom output


_write_geom(GEOM_FILE_NAME, GEOM, DEFAULT_HEADERS)
